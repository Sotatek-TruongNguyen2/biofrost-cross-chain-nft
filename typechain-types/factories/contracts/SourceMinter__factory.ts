/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SourceMinter,
  SourceMinterInterface,
} from "../../contracts/SourceMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "originalGameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "destinationGameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "destinationChainSelector",
        type: "uint256",
      },
    ],
    name: "NFTBridgeInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftAddr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "originalGameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "destinationGameId",
        type: "uint256",
      },
    ],
    name: "NFTBridgeUnLocked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "locked",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "originalGameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "destinationGameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "destinationChainSelector",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "destinationChainSelector",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516109e93803806109e9833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b6080516108d2610117600039600061025f01526108d26000f3fe6080604052600436106100385760003560e01c8063150b7a02146100445780634202e90714610081578063ae5a3bcd146100aa5761003f565b3661003f57005b600080fd5b34801561005057600080fd5b5061006b600480360381019061006691906105b7565b6100ea565b604051610078919061067a565b60405180910390f35b34801561008d57600080fd5b506100a860048036038101906100a39190610695565b61025d565b005b3480156100b657600080fd5b506100d160048036038101906100cc91906106fc565b61046a565b6040516100e1949392919061075e565b60405180910390f35b60008060008085858101906100ff91906107a3565b9250925092506040518060800160405280888152602001848152602001838152602001828152506000808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050863373ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff167f1d6e04d843ef58bdf35ac8a0cb66dd9cb280581f046787890ebd7e45f0027fe486868660405161023f939291906107f6565b60405180910390a463150b7a0260e01b935050505095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b557600080fd5b60008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905081816060015103610463578373ffffffffffffffffffffffffffffffffffffffff166342842e0e3087866040518463ffffffff1660e01b81526004016103c09392919061083c565b600060405180830381600087803b1580156103da57600080fd5b505af11580156103ee573d6000803e3d6000fd5b50505050828473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f5691ac3780c81fe5c5620072c92ff7084adc85a05ee20c51ef10aceee184ddbb8460200151856040015160405161045a929190610873565b60405180910390a45b5050505050565b600060205282600052604060002060205281600052604060002060205280600052604060002060009250925050508060000154908060010154908060020154908060030154905084565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104e9826104be565b9050919050565b6104f9816104de565b811461050457600080fd5b50565b600081359050610516816104f0565b92915050565b6000819050919050565b61052f8161051c565b811461053a57600080fd5b50565b60008135905061054c81610526565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261057757610576610552565b5b8235905067ffffffffffffffff81111561059457610593610557565b5b6020830191508360018202830111156105b0576105af61055c565b5b9250929050565b6000806000806000608086880312156105d3576105d26104b4565b5b60006105e188828901610507565b95505060206105f288828901610507565b94505060406106038882890161053d565b935050606086013567ffffffffffffffff811115610624576106236104b9565b5b61063088828901610561565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6106748161063f565b82525050565b600060208201905061068f600083018461066b565b92915050565b600080600080608085870312156106af576106ae6104b4565b5b60006106bd87828801610507565b94505060206106ce87828801610507565b93505060406106df8782880161053d565b92505060606106f08782880161053d565b91505092959194509250565b600080600060608486031215610715576107146104b4565b5b600061072386828701610507565b935050602061073486828701610507565b92505060406107458682870161053d565b9150509250925092565b6107588161051c565b82525050565b6000608082019050610773600083018761074f565b610780602083018661074f565b61078d604083018561074f565b61079a606083018461074f565b95945050505050565b6000806000606084860312156107bc576107bb6104b4565b5b60006107ca8682870161053d565b93505060206107db8682870161053d565b92505060406107ec8682870161053d565b9150509250925092565b600060608201905061080b600083018661074f565b610818602083018561074f565b610825604083018461074f565b949350505050565b610836816104de565b82525050565b6000606082019050610851600083018661082d565b61085e602083018561082d565b61086b604083018461074f565b949350505050565b6000604082019050610888600083018561074f565b610895602083018461074f565b939250505056fea2646970667358221220ecaa08d8fd98d01f6521dee869fe25980996d01d55a9c077dc5305fbda17b66364736f6c63430008140033";

type SourceMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SourceMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SourceMinter__factory extends ContractFactory {
  constructor(...args: SourceMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(router, overrides || {});
  }
  override deploy(
    router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(router, overrides || {}) as Promise<
      SourceMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SourceMinter__factory {
    return super.connect(runner) as SourceMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SourceMinterInterface {
    return new Interface(_abi) as SourceMinterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SourceMinter {
    return new Contract(address, _abi, runner) as unknown as SourceMinter;
  }
}
